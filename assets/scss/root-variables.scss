@use './design-entities/fonts/font_types' as *;
@use './design-entities/spacing/spacing' as *;
@use 'design-entities/colors/colors' as *;

@use './utils/fluid-type-function' as *;

@use './utils/shadows' as *;
@use './utils/z-indexes' as *;

:root {
  @each $letterSpacing, $value in $letterSpacings {
    --ls-#{$letterSpacing}: #{$value};
  }
}

:root {
  @each $fontStyle, $value in $fontStyles {
    --fst-#{$fontStyle}: '#{$value}';
  }
}

:root {
  @each $fontWeight, $value in $fontWeights {
    --fw-#{$fontWeight}: #{$value};
  }
}

:root {
  @each $fontLineHeight, $value in $fontLineHeights {
    --lh-#{$fontLineHeight}: #{$value};
  }
}

:root {
  @each $fontFamily, $value in $fontFamilies {
    --ff-#{$fontFamily}: '#{$value}';
  }
}

:root {
  @each $level, $value in $z-indexes {
    --z-index-#{$level}: #{$value};
  }
}

:root {
  @each $level, $value in $shadows {
    --shadow-#{$level}: #{$value};
  }
}

:root {
  @each $fontSize, $value in $fontSizes {
    --fs-#{$fontSize}: #{$value};
    --fs-#{$fontSize}-c: #{fluidType(
      $min-vw,
      $max-vw,
      $minSupportedFs,
      $value
    )};
  }
}

@each $category, $categoryValues in $colorCategories {
  @each $type, $shades in $categoryValues {
    :root {
      @each $shade, $value in $shades {
        --#{$category}-#{$type}-#{$shade}: #{$value};
      }
    }
  }
}

:root {
  --min-vw: #{$min-vw};
  --max-vw: #{$max-vw};
  --visual-spacing-corrector: #{$visualCorrector};

  @each $breakpoint, $breakpointMap in $breakpoints {
    --bp-#{$breakpoint}-spacing: #{map-get($breakpointMap, spacing)};
  }
}

:root {
  @each $breakpoint, $breakpointMap in $breakpoints {
    --bp-#{$breakpoint}: #{map-get($breakpointMap, value)};
  }
}

:root {
  @each $breakpoint, $breakpointMap in $breakpoints {
    --bp-#{$breakpoint}-spacing-cshrink: #{fluidType(
        $min-vw,
        $max-vw,
        $min-spacing,
        map-get($breakpointMap, spacing)
      )};
  }
}

:root {
  @each $breakpoint, $breakpointMap in $breakpoints {
    --bp-#{$breakpoint}-spacing-c: #{fluidType(
        $min-vw,
        $max-vw,
        map-get($breakpointMap, min-bp-spacing),
        map-get($breakpointMap, spacing)
      )};
  }
}

