@use '../design-entities/spacing/spacing' as *;
@use '../design-entities/colors/colors' as *;
@use '../design-entities/fonts/fonts' as *;
@use './fluid-type-function' as *;
@use './z-indexes' as *;
@use './shadows' as *;

@each $category, $categoryValues in $colorCategories {
  @each $type, $shades in $categoryValues {
    @each $shade, $value in $shades {
      .clr-#{$category}-#{$type}-#{$shade} {
        color: #{$value};
      }
      .bg-clr-#{$category}-#{$type}-#{$shade} {
        background-color: #{$value};
      }
    }
  }
}

@each $level, $value in $shadows {
  .shadow-#{$level} {
    box-shadow: #{$value};
  }
}

@each $level, $value in $z-indexes {
  .z-index-#{$level} {
    z-index: #{$value};
  }
}

/* Read only utility */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap; /* added line */
  border: 0;
}

.flex {
  display: flex;
  row-gap: var(--row-gap, 0.75);
  column-gap: var(--column-gap, 0.75);
}

.grid {
  display: grid;
  row-gap: var(--row-gap, 0.75);
  column-gap: var(--column-gap, 0.75);
}
